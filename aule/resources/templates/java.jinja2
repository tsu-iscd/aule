{%- macro gen_block(node, full_block) -%}
    {% if full_block %}{{- "{\n" }}{% endif %}
    {%- if node.body | length > 0 -%}
    {%- filter indent(4, True) -%}
        {% for line in node.body %}
            {%- if line is block -%}
                {{- gen_block(line, full_block=True) }}
            {% else %}
                {{- line }}
            {%- endif %}
        {% endfor %}
    {%- endfilter -%}
    {%- endif -%}
    {% if full_block %}{{ "\n}" }}{% endif %}
{%- endmacro -%}


{%- macro gen_field(field) -%}
     {{ field.modifiers | gen_modifiers }}{{ field | typed }}{{ field.modifiers | gen_property }};
{%- endmacro -%}


{%- macro gen_parents (class_) -%}
    {% if class_.parents|length > 1 -%}
        {% raise 'Only one parent class can be used in Java.' %}
    {% elif class_.parents|length == 1 %}
        {{- 'extends ' ~ class_.parents[0] -}}
    {% endif %}
{%- endmacro -%}

{%- macro gen_class(class_) -%}
    public static abstract class {{ class_.name }} {{ gen_parents(class_)}}  {{- ' {' }}
    {{- '\n' }}
    {% filter  indent(4, True) -%}
        {% for field in class_.fields -%}
            {{ gen_field(field) ~ '\n'}}
        {% endfor %}
    {% endfilter %}
    {{- '\n}' }}
{%- endmacro -%}


{%- macro gen_enum(e) -%}
    public enum {{ e|name }} {
    {{ e | gen_enum_body }}
    {{- '\n}' }}
{%- endmacro -%}

import java.util.List;

public class AST{

{% filter  indent(4, True) -%}
{% for cls in classes -%}
    {{ gen_class(cls) ~ '\n'}}
{% endfor %}

{% for e in enums -%}
    {{- gen_enum(e) ~ '\n'}}
{% endfor %}

{% endfilter %}

}